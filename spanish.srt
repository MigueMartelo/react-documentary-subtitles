1
00:00:04,520 --> 00:00:13,670
[Música]
Probando. Uno, dos, uno, dos.

2
00:00:13,670 --> 00:00:33,489
Uno, dos, tres, cuatro.
El rápido zorro café salta sobre el perro perezoso.

3
00:00:33,489 --> 00:00:41,200
Este es el podcast de React. Soy Chantastic.
Hoy vamos a volver atrás. Muy, muy atrás. De regreso a los inicios

4
00:00:41,200 --> 00:00:47,380
de React. Mirando 10 años atrás,
pareciería que React siempre estuvo destinado a triunfar.

5
00:00:47,380 --> 00:00:52,719
Que un framework hecho por Facebook era demasiado grande para fallar.
Pero esta no es ese tipo de historia.

6
00:00:52,719 --> 00:00:58,290
De hecho, hubieron muchas ocasiones en la historia de Reacts
donde parecia que no iba a tener éxito en lo absoluto.

7
00:00:58,290 --> 00:01:05,610
Entonces, ¿qué pasó?
¿Como es que React paso en 10 años de verse muerto al llegar
How did react go, in 10 years, from looking

8
00:01:05,610 --> 00:01:12,580
a ser el framework de front-end de
Javascript dominante que es ahora?

9
00:01:12,580 --> 00:01:18,820
Todo empieza en el 2011 en Facebook. jQuery y Backbone
dominaban el front-end en JavaScript

10
00:01:18,820 --> 00:01:24,710
pero herramientas pragmáticas como Ember, Angular y
Knockout entraron en escena. En el mundo exterior

11
00:01:24,710 --> 00:01:30,070
"Gangnam Style" recién se había subido a YouTube,
"Call Me Maybe" estaba en la cima de las listas de música

12
00:01:30,070 --> 00:01:35,790
y el meme más reciente era el de "La Novia Psicópata"
En tiempo del Internet,

13
00:01:35,790 --> 00:01:42,500
básicamente una eternidad. Así que ponte el cinturón de seguridad,
desconéctate de todo, y habilita el modo de "no molestar",

14
00:01:42,500 --> 00:01:45,320
porque está es la historia de algo que tenía pocas posibilidad de ganar.

15
00:01:45,320 --> 00:01:46,320
[Música]

16
00:01:46,320 --> 00:01:51,480
Veo que esta cámara tiene una luz roja,
pero está otra no lo tiene.

17
00:01:51,480 --> 00:01:52,480
[Música]

18
00:01:52,480 --> 00:01:55,840
Solo sujétalo con esto.

19
00:01:55,840 --> 00:02:10,819
Probando uno dos, probando.
Testing one two, testing.

20
00:02:10,819 --> 00:02:17,200
[Música]

21
00:02:17,200 --> 00:02:36,349
[La computadora se enciende]

22
00:02:36,349 --> 00:02:40,050
Cuando obtuve la oferta para trabajar en Facebook,
le conté a mi mamá. Estaba muy emocionado.

23
00:02:40,050 --> 00:02:44,840
La película "La Red Social" se había estrenado,
y ella la había visto recientemente.

24
00:02:44,840 --> 00:02:48,970
Ella constantemente me desanimaba de aceptar
porque pensaba que Mark Zuckerberg

25
00:02:48,970 --> 00:02:54,769
no parecía una buena persona. Durante el tiempo
en el que trabajé en Facebook,

26
00:02:54,769 --> 00:02:59,170
no creo que vuelva a existir algo similar nunca más.
No era algo que que hubiese experimentado antes.

27
00:02:59,170 --> 00:03:04,129
Solo unos meses antes de unirme, Kanye West visitó
las oficinas de Facebook,

28
00:03:04,129 --> 00:03:11,049
se subió a una mesa de la cafetería
y rapeó algunas rimas

29
00:03:11,049 --> 00:03:15,321
y estaba trabajando con esta persona que recién se había
graduado de la Universidad,

30
00:03:15,321 --> 00:03:20,299
y yo estaba tratando de explicarle que había trabajado
en estos trabajos de mierda en software. Para ese entonces,

31
00:03:20,299 --> 00:03:26,410
ya habían sido 10 o 15 años, y nada como esto había pasado antes,
no en la ingeniería de software.

32
00:03:26,410 --> 00:03:32,319
"♪ Eres mi estrés, eres mi masajista ♪"

33
00:03:32,319 --> 00:03:37,159
En aquel tiempo, JavaScript pasaba por un poco
de crisis existencial,

34
00:03:37,159 --> 00:03:44,189
acerca de si ser más como un lenguagje de programación real,
o un lenguaje de programación de juguete.

35
00:03:44,189 --> 00:03:49,040
Había mucha agitación. jQuery era popular,
MooTools era popular,

36
00:03:49,040 --> 00:03:53,459
y había tantas opciones diferentes en guerra
tratando de llegar a la mente del público.

37
00:03:53,459 --> 00:03:57,390
Y había muchas similitudes entre ellos, pero cada
una tenía sútiles diferencias
one had its kind of bespoke differences and

38
00:03:57,390 --> 00:04:02,780
y ninguna era realmente fantástica para construir
interfaces de usuario y aplicaciones complejas.

39
00:04:02,780 --> 00:04:07,220
Había esta tendencia más hacia aplicaciones sofisticadas.
towards more sophisticated applications that

40
00:04:07,220 --> 00:04:13,230
que hacían más cosas, y en Facebook todavía
priorizabamos la tecnología para hacer render en el server,

41
00:04:13,230 --> 00:04:18,299
y una de las cosas por las cuales
estuvimos en contra por un largo tiempo

42
00:04:18,299 --> 00:04:22,930
fue simplemente incrementar el tamaño de los paquetes de JavaScript,
así que conforme moviamos más y más cosas al lado del cliente,

43
00:04:22,930 --> 00:04:27,370
el cliente se volvía más y más lento, así que en realidad 
nos cambiamos hacia el render del lado del servidor

44
00:04:27,370 --> 00:04:32,270
y hacia pequeñas pedazos de JavaScript por un tiempo.
Y había esta sensación de que

45
00:04:32,270 --> 00:04:37,590
sabíamos que lo que estábamos haciendo para
el desarrollo en el lado del cliente no estaba funcionando
development wasn't working but also that server

46
00:04:37,590 --> 00:04:43,770
pero también lo que teníamos en el lado del servidor no nos iba a llevar
a ningún lado. 
So I think that was the kind of environment

47
00:04:43,770 --> 00:04:51,090
Creo que ese fue el tipo de ambiente del nació
salió React.

48
00:04:51,090 --> 00:04:57,620
[Música]

49
00:04:57,620 --> 00:05:03,260
Cuando me uní a Facebook en el 2010, había colaborado mucho
en código libre, particularmente

50
00:05:03,260 --> 00:05:08,229
en el mundo de JavaScript. Era un colaborador en la herramienta
Dojo.js en aquel entonces

51
00:05:08,229 --> 00:05:14,210
el cual es uno de los abuelos del movimiento de JavaScript, junto
a los prototipos y jQuery.

52
00:05:14,210 --> 00:05:20,270
Pasé mis primeros dos años en Facebook en el equipo de desarrollo móvil.
Empezamos con una gran determinación
the mobile team. We had started off a big

53
00:05:20,270 --> 00:05:25,289
para competir con Apple y Google, y pensamos
que nuestra mayor oportunidad de éxito

54
00:05:25,289 --> 00:05:32,419
como compañía era ir directamente hacia la web, y
empujar para construir el ecosistema de HTML5.

55
00:05:32,419 --> 00:05:38,819
So as part of that we developed, myself and
two other engineers called Vladimir Kolesnikov

56
00:05:38,819 --> 00:05:43,970
and Will Bailey, built a framework called
Bolt.js so named because we bolted together

57
00:05:43,970 --> 00:05:50,630
a bunch of things that each of us liked. Bolt
was basically more or less Facebook's implementation

58
00:05:50,630 --> 00:05:55,699
of a client-side MVC. I think it was like
a pretty good version, maybe a better version,

59
00:05:55,699 --> 00:06:01,400
of things like backbone and a couple of other
Frameworks that had existed at the time. But

60
00:06:01,400 --> 00:06:08,510
it was born from a place of the specific constraints
of Facebook. It's the heart of your Facebook

61
00:06:08,510 --> 00:06:14,190
experience. Completely rethought from the
ground up. We've been working on it all year

62
00:06:14,190 --> 00:06:20,400
and we're calling it Timeline. Facebook was
one of the first big products that was really

63
00:06:20,400 --> 00:06:25,759
an experience more than anything else. You're
not trying to buy groceries or get tickets

64
00:06:25,759 --> 00:06:30,259
or anything like that on Facebook, you really
just want to be entertained. And as such you

65
00:06:30,259 --> 00:06:35,960
know the user interface itself needs to be
really pleasing. Bolt was not a tool belt,

66
00:06:35,960 --> 00:06:42,389
it was truly a application development framework.
Something designed and meant to build complicated

67
00:06:42,389 --> 00:06:48,580
interactive rich apps and was being used to
build pretty complicated very real products

68
00:06:48,580 --> 00:06:53,330
at Facebook at the time. We ended up having
to essentially replicate most of Facebook,

69
00:06:53,330 --> 00:06:59,111
all the various apps, be it timeline, chat,
newsfeed. We had a whole photos app that we

70
00:06:59,111 --> 00:07:04,440
built and so obviously the team had to expand
greatly. Like that so I think at some point

71
00:07:04,440 --> 00:07:09,270
we probably had maybe 25 Engineers working
on all this between building Bolt and building

72
00:07:09,270 --> 00:07:13,420
apps built on Bolt and that's just on the
mobile team. Bolt was never the problem, it

73
00:07:13,420 --> 00:07:18,460
was the architecture that would eventually
break down for us. As the product itself got

74
00:07:18,460 --> 00:07:23,690
more complex and as we added more engineers
to the team, we didn't hit a wall but it started

75
00:07:23,690 --> 00:07:28,460
to get really, really hard to make changes.
And so you know that was around the time that

76
00:07:28,460 --> 00:07:42,949
Jordan was on the ads team and he's like I
wonder, there's got to be a better way.

77
00:07:42,949 --> 00:07:48,320
Jordan is an enigmatic figure. He uh he's
a little secretive so there's not much that

78
00:07:48,320 --> 00:07:54,699
I know about him. Jordan and I aren't necessarily..
we haven't necessarily been in the spotlight

79
00:07:54,699 --> 00:07:59,111
much. Especially Jordan kind of shied away
from spotlights since the early days. Jordan

80
00:07:59,111 --> 00:08:05,979
was a product engineer at the time, working
on ads and ads has one of the most complicated

81
00:08:05,979 --> 00:08:12,830
pieces of UI across all of Facebook at the
moment. On the as team they were hitting much

82
00:08:12,830 --> 00:08:18,310
you know really hitting the limits of what
you can do without React complexity wise.

83
00:08:18,310 --> 00:08:22,560
And just the developers ability to hold in
their head and understand a bit of code that

84
00:08:22,560 --> 00:08:27,370
somebody else wrote and you know look at the
screen and say okay this code is doing that

85
00:08:27,370 --> 00:08:32,560
and I need to know why. And Jordan had a lot
of very interesting ideas around how you could

86
00:08:32,560 --> 00:08:36,550
take what we had done in Bolt and make it
much more functional and make it more ability..

87
00:08:36,550 --> 00:08:41,269
to make it easier for it to scale with people's
ability to understand large applications.

88
00:08:41,269 --> 00:08:44,990
And so we had a lot of ongoing dialogue and
he would come back and forth to us with various

89
00:08:44,990 --> 00:08:49,720
ideas how to change it. I think one of the
original names for react was FBolt which is

90
00:08:49,720 --> 00:08:53,450
Functional Bolt.

91
00:08:53,450 --> 00:08:59,310
He saw that there was an oppotunity to do
it.. to solve some of the tricky parts in

92
00:08:59,310 --> 00:09:06,500
Bolt in an easier way. So what Jordan decided
to do, or at least the story that he had told

93
00:09:06,500 --> 00:09:15,060
me, was: "hey wouldn't it be easier if, any
time anything happened, in the app: API state

94
00:09:15,060 --> 00:09:19,670
changes, user type something, we just blow
away the entire UI and we re-render all of

95
00:09:19,670 --> 00:09:25,300
it". If you look at what every other framework
was doing at the time, it was called two-way

96
00:09:25,300 --> 00:09:30,940
data binding and this was not that. It was
like: forget about data binding we're not

97
00:09:30,940 --> 00:09:35,459
going to do that at all. Anytime anything
changes we're just going to re-render and

98
00:09:35,459 --> 00:09:38,380
then there's an asterisk which says well we're
not going to re-render everything, we're going

99
00:09:38,380 --> 00:09:43,690
to try to render as little as possible but
conceptually we're not going to manage these

100
00:09:43,690 --> 00:09:48,589
relationships between views and models, we're
just gonna.. Honestly I thought it was completely

101
00:09:48,589 --> 00:09:53,880
crazy. At the time I was really down on frameworks
in general and I thought there was no way

102
00:09:53,880 --> 00:09:58,190
that was going to work. To many people that
seemed like magic, it was so far outside of

103
00:09:58,190 --> 00:10:10,560
everybody's idea of how things should work
and do work that yeah it took a lot of convincing.

104
00:10:10,560 --> 00:10:16,340
[Music]

105
00:10:16,340 --> 00:10:39,410
I've been working at Facebook for 10 years
now. I met this person called Jordan Walke.

106
00:10:39,410 --> 00:10:43,770
Some people told me he had an interesting
project about JavaScript and I may be interested.

107
00:10:43,770 --> 00:10:49,149
And so I had this meeting with him and one
thing he asked me at the beginning of the

108
00:10:49,149 --> 00:10:57,760
meeting was: what is the most difficult thing
to do in the front-end right now? And I mean,

109
00:10:57,760 --> 00:11:03,230
I was six months out of school, I was like
I don't know and the thing he told me is:

110
00:11:03,230 --> 00:11:09,470
updates. You need to find the DOM node that
is going to change, you need to change the

111
00:11:09,470 --> 00:11:16,310
listener to the click event and remove it
and do all of this, which is pretty complicated.

112
00:11:16,310 --> 00:11:22,930
And this was also a massive source of bugs
within the Facebook codebase. I was like okay,

113
00:11:22,930 --> 00:11:28,960
yeah you're right, this is probably the hardest
thing. And he was like: I have a solution

114
00:11:28,960 --> 00:11:33,310
for this. I was like, okay this guy is crazy,
like this is never going to work, it's never

115
00:11:33,310 --> 00:11:39,100
going to be performant. The meeting ended
and for a few weeks I forgot about the idea.

116
00:11:39,100 --> 00:11:45,450
But one weekend I was like, okay maybe I should
try this, maybe there's something to it. Before

117
00:11:45,450 --> 00:11:53,920
joining Facebook, I worked on a way to find
your guilds in World of Warcraft and we basically

118
00:11:53,920 --> 00:12:01,320
needed to search through like 20 000 guilds.
And I did a lot of performance work to be

119
00:12:01,320 --> 00:12:05,700
the fastest way possible to display when you
change all of those filters in real time.

120
00:12:05,700 --> 00:12:12,829
And I was like: okay I spent months, full
time, working on making this super performant,

121
00:12:12,829 --> 00:12:19,240
let's try it with React. And in practice it
took me like half an hour to write it and

122
00:12:19,240 --> 00:12:25,130
it was actually not as performant but around
the same order of magnitude at performance.

123
00:12:25,130 --> 00:12:30,600
And I was like mind blown and to this day
I became the biggest React fan in the world.

124
00:12:30,600 --> 00:12:35,839
I was in the photos team and spending all
of my working hours like trying to use React

125
00:12:35,839 --> 00:12:40,740
on my own projects in the photos team, evangelizing.
I felt like it could change the world, which

126
00:12:40,740 --> 00:12:45,910
it did.

127
00:12:45,910 --> 00:12:48,490
[Music]

128
00:12:48,490 --> 00:12:55,880
[Chantastic] Jordan is making headway on his
project. He's gotten others involved and they're

129
00:12:55,880 --> 00:13:03,329
seeing the value. But not everyone is impressed.
One manager started to take notice but saw

130
00:13:03,329 --> 00:13:09,790
Jordan's project as a distraction. So they
asked Lee Byron to meet with Jordan and put

131
00:13:09,790 --> 00:13:13,600
a stop to it to focus efforts on Bolt. We
get into a room. Instantly I knew that this

132
00:13:13,600 --> 00:13:17,300
was going to be weird because we showed up
with very different energies. I'm showing

133
00:13:17,300 --> 00:13:23,950
up with this like, okay Jordan I want to understand
what's going on with your project but I also

134
00:13:23,950 --> 00:13:28,870
want to help make sure that we are spending
our time well and we're working on things

135
00:13:28,870 --> 00:13:33,100
that are gonna have longevity and solving
problems we want to have. And Jordan came

136
00:13:33,100 --> 00:13:36,860
in with like, can I show you a demo of what
I've been working on like this is so exciting

137
00:13:36,860 --> 00:13:40,740
and it does this and it does that. And eventually
like towards the end of this meeting with

138
00:13:40,740 --> 00:13:46,709
him I had to kind of admit like he had something
really compelling. Like I was now really interested

139
00:13:46,709 --> 00:13:51,670
in learning more about what he was doing.
So Jordan's pitch to me was like I only want

140
00:13:51,670 --> 00:13:55,810
to invest in this and work on it if it's going
to be something that people will use and if

141
00:13:55,810 --> 00:13:59,199
that's not going to be the case, sure we're
not going to do this. He's like but I feel

142
00:13:59,199 --> 00:14:04,290
really strongly that all the ways we've been
doing UI development up until now have been

143
00:14:04,290 --> 00:14:08,230
flawed. Whether they're a JavaScript library
that doesn't quite work for us or whether

144
00:14:08,230 --> 00:14:14,000
it's like a 30 year old tried and true model
for doing UI application development. They

145
00:14:14,000 --> 00:14:21,260
all suffer from the same base problem: a state
management and I think this is the way forward,

146
00:14:21,260 --> 00:14:27,759
and Lee if you could just dig into the code
and learn more and try it and then come back

147
00:14:27,759 --> 00:14:32,120
and we'll talk about this again, then we can
figure this out. I was like all right all

148
00:14:32,120 --> 00:14:38,690
right and so I did I dug around the code and
it was um a little hard to understand, but

149
00:14:38,690 --> 00:14:43,339
I eventually got to play with it and got to
build a couple of things and had to admit,

150
00:14:43,339 --> 00:14:48,060
coming away, that like yes there was something
incredibly interesting there. And that was

151
00:14:48,060 --> 00:14:52,730
how I got sucked into the project and I ended
up working on it quite a bit for the the next

152
00:14:52,730 --> 00:14:59,209
couple of months. Lee brings this rigor and
sort of design mentality to these things that

153
00:14:59,209 --> 00:15:03,940
really helped with the initial versions of
React in terms of standardizing it and turning

154
00:15:03,940 --> 00:15:08,459
it from something that was kind of like an
ugly baby that had just grown up at Facebook

155
00:15:08,459 --> 00:15:14,029
to something that really people could approach
from around the world. [Music] There were

156
00:15:14,029 --> 00:15:21,000
a couple of problems that I faced right away
when trying to understand the code base and

157
00:15:21,000 --> 00:15:26,990
build something. Not only was the the set
of tools and the mental models really different

158
00:15:26,990 --> 00:15:35,220
from what I was used to as a UI engineer.
The syntax and the programming concepts involved,

159
00:15:35,220 --> 00:15:39,850
just the terminology, was also really different.
My takeaway was, you know, okay the whole

160
00:15:39,850 --> 00:15:44,790
bid here was that this would be simpler but
I can't help but feel like this is really

161
00:15:44,790 --> 00:15:51,790
complicated. Mostly as a desire for me to
understand the model but also with a hope

162
00:15:51,790 --> 00:15:58,800
that it would kind of end up helping resolve
some things, I wanted to build a glossary.

163
00:15:58,800 --> 00:16:06,300
Like what are all the things the concepts
and then what are all the actions or verbs

164
00:16:06,300 --> 00:16:10,649
that are going on here. And so I literally
just listed them all out. And then I would

165
00:16:10,649 --> 00:16:13,610
go back to Jordan, I'd go back to other people
working on it, and ask questions like did

166
00:16:13,610 --> 00:16:17,199
I get this right? Are these definitions right?
And they go yeah okay, no you should really

167
00:16:17,199 --> 00:16:20,380
think about it that way, and be like okay,
well that's not how this.. And it would go

168
00:16:20,380 --> 00:16:24,700
back and forth and back and forth and I'd
be honing these definitions and along the

169
00:16:24,700 --> 00:16:30,040
way we'd realize like, oh this concept and
that concept are the same, we're going to

170
00:16:30,040 --> 00:16:35,080
name them one thing instead of two things.
So unwinding all of this and essentially writing

171
00:16:35,080 --> 00:16:41,100
up what ended up being like a reimagining
of the component life cycle and therefore

172
00:16:41,100 --> 00:16:46,899
sort of the entire front-facing API for React.
And I was very happy to see like incredible

173
00:16:46,899 --> 00:16:50,610
enthusiasm around that. Jordan was like "ah
this is amazing, this really clarifies the

174
00:16:50,610 --> 00:16:56,050
ideas". At that point a handful of other folks
had gotten involved with the project too and

175
00:16:56,050 --> 00:17:02,060
then I spent sort of the next month or so,
sort of piece by piece folding those into

176
00:17:02,060 --> 00:17:08,560
place and pretty significantly changing the
surface API of React in the process. That

177
00:17:08,560 --> 00:17:14,400
was I think the first shift from this being
a thing that existed mostly in Jordan's head,

178
00:17:14,400 --> 00:17:18,630
that other people were playing with, to a
thing that all of a sudden felt owned by the

179
00:17:18,630 --> 00:17:23,280
whole team. Where team here is like a collection
of UI Engineers scattered across Facebook

180
00:17:23,280 --> 00:17:28,270
who were sort of bought in on this vision,
who now felt that we now have the same terminology

181
00:17:28,270 --> 00:17:32,380
we can use when someone has a question, anyone
can jump in and answer it rather than only

182
00:17:32,380 --> 00:17:41,179
Jordan. That was the first big shift. [Music]

183
00:17:41,179 --> 00:17:49,410
One of the first projects that React was used
for was the UFI, the Universal Feedback Interface,

184
00:17:49,410 --> 00:17:54,250
which is basically the likes, comments and
shares at the bottom of each post. This was

185
00:17:54,250 --> 00:17:59,450
still during Facebook's kind of web era, when
Facebook on the web was like the sort of big

186
00:17:59,450 --> 00:18:05,690
driver of engagement. Newsfeed had a billion
people hitting it every day and was massively

187
00:18:05,690 --> 00:18:11,030
tuned for performance. Heavily interactive
surface both on the input side of course you're

188
00:18:11,030 --> 00:18:15,090
like clicking it to add likes, you're typing
into it to add comments, but also on the receiving

189
00:18:15,090 --> 00:18:18,970
side we want comments to come in live, so
as you're looking at it as a comment comes

190
00:18:18,970 --> 00:18:24,650
in we want it to just pop up right there.
And there was this product desire for that

191
00:18:24,650 --> 00:18:31,540
interface to feel almost like a one-off chat
thread, and that was so cool at that time.

192
00:18:31,540 --> 00:18:36,150
And as that started to work the second thread
was well okay if this can work for this really

193
00:18:36,150 --> 00:18:41,710
isolated sense of messaging then what if it
could work for messaging as a whole and this

194
00:18:41,710 --> 00:18:47,740
was another really complicated and fraught
with bug surface area. That was when a lot

195
00:18:47,740 --> 00:18:54,780
of the ideas in React congealed, the JSX syntax
was introduced and some of the ideas about

196
00:18:54,780 --> 00:19:00,000
how to work with data and React sort of were
clarified. A couple of our UI Engineers, along

197
00:19:00,000 --> 00:19:05,280
with the messaging team, if I remember correctly
Jing Chen was sort of the champion of this

198
00:19:05,280 --> 00:19:10,470
project, realized that we needed a completely
new way to think about state too.

199
00:19:10,470 --> 00:19:17,669
So my name is Jing and I'm a software engineer
in the product infrastructure team at Facebook.

200
00:19:17,669 --> 00:19:24,070
Flux is an application architecture designed
around React's principle of unidirectional

201
00:19:24,070 --> 00:19:30,250
data flow. Paired with flux, React could go
beyond the view layer to model entire applications.

202
00:19:30,250 --> 00:19:34,700
This shift in how to think about state paired
very well with how React was thinking about

203
00:19:34,700 --> 00:19:39,860
updating UI and ended up being sort of the
next chapter for how to think about React

204
00:19:39,860 --> 00:19:46,909
being more than just how do you model complicated
UI but how do you model sufficiently complicated

205
00:19:46,909 --> 00:19:50,340
applications. Like this was something that
expanded the full screen and multiple touch

206
00:19:50,340 --> 00:19:55,240
points and had navigation to it and it allowed
us to step into that next chapter. I remember

207
00:19:55,240 --> 00:20:00,419
asking Jing like hey how's it going with this
React stuff? Do you think this is going to

208
00:20:00,419 --> 00:20:04,340
work? She was like, yeah this is pretty good,
I'm pretty sure it's gonna work. That was

209
00:20:04,340 --> 00:20:16,950
when I became more convinced.

210
00:20:16,950 --> 00:20:22,530
[Music]

211
00:20:22,530 --> 00:20:27,530
Instagram joined Facebook in 2012. I think
we had started calling it React by then and

212
00:20:27,530 --> 00:20:32,330
there was a couple of engineers from Facebook
that went to join Instagram to help them expand

213
00:20:32,330 --> 00:20:37,860
the product offering. At the time Instagram
was just an iOS and an Android app and they

214
00:20:37,860 --> 00:20:49,020
wanted to have a web presence as well.
I spent 11 years in San Francisco, it was

215
00:20:49,020 --> 00:20:56,600
really fun and I made a lot of great friends
but the the change of pace out in the in the

216
00:20:56,600 --> 00:21:00,680
countryside is great. It's just very peaceful
and nice. I went to Facebook straight out

217
00:21:00,680 --> 00:21:05,780
of school. I studied computer science undergrad
and I got a master's degree. Facebook was,

218
00:21:05,780 --> 00:21:12,750
believe it or not, the cool place to work
back in 2010. It was this great product, that

219
00:21:12,750 --> 00:21:17,870
everybody used. It was super cool on college
campuses and I was really excited to work

220
00:21:17,870 --> 00:21:23,550
there.

221
00:21:23,550 --> 00:21:30,529
I joined Facebook video. The pitch was, we're
the third largest video site in the world,

222
00:21:30,529 --> 00:21:36,480
after YouTube and Dailymotion I think, and
there was like one engineer working on it

223
00:21:36,480 --> 00:21:39,970
and like you get to be engineer number two
and I was like that sounds pretty cool. We

224
00:21:39,970 --> 00:21:42,861
worked really closely with the iOS photos
team in the Android Photos team and we were

225
00:21:42,861 --> 00:21:48,659
building an Instagram killer and nobody remembers
this but it was called Facebook Camera. One

226
00:21:48,659 --> 00:21:54,410
morning the photo's team got called into the
office early. They said like be at HQ at 8am

227
00:21:54,410 --> 00:21:57,789
and then the VP of engineering was like hey
we bought Instagram, they're your new co-workers

228
00:21:57,789 --> 00:22:02,980
now. And these were like the people that were
like our fierce competitors you know. We looked

229
00:22:02,980 --> 00:22:06,730
at them a little bit as the enemy, I'm sure
they looked at us a little bit as the enemy.

230
00:22:06,730 --> 00:22:10,950
They were a really small team at the time,
they had their core fundamentals really nailed

231
00:22:10,950 --> 00:22:15,370
but there was a lot of stuff they needed to
figure out, that they did not have the team

232
00:22:15,370 --> 00:22:19,730
to figure out on their own and a big one of
those was what does it mean for Instagram

233
00:22:19,730 --> 00:22:23,140
to be on the web. The web experience is really
important for driving growth and so this was

234
00:22:23,140 --> 00:22:28,100
a pretty important priority and so me and
this designer, Maykel Loomans, started building

235
00:22:28,100 --> 00:22:34,370
all the web stuff. And that's kind of where
React enters the picture, when we started

236
00:22:34,370 --> 00:22:40,760
developing this website. [Music]

237
00:22:40,760 --> 00:22:49,270
We were given this mandate to use client rendering
so I went to the product infrastructure team

238
00:22:49,270 --> 00:22:56,830
at Facebook, which was run by Tom Occhino.
Product infrastructure's role was to support

239
00:22:56,830 --> 00:23:03,830
any team that needed help and do it in a way
that your key indicators of success are going

240
00:23:03,830 --> 00:23:08,380
to be other teams saying "yeah that really
helped us". You go to them and you kind of

241
00:23:08,380 --> 00:23:15,060
consult the Council of Elders and they give
you their recommendation and I said, hey we

242
00:23:15,060 --> 00:23:19,900
need to do client rendering, what do we do?
And the recommendation at the time was yeah

243
00:23:19,900 --> 00:23:22,420
we don't know. We've got like three different
things that we're working on, you should go

244
00:23:22,420 --> 00:23:33,809
try one. We had something called Bolt.js,
there was a second thing called JS.HTML and

245
00:23:33,809 --> 00:23:39,850
then there was this this thing called React.
Pete went and spoke to Jordan about using

246
00:23:39,850 --> 00:23:44,620
React and he came and talked to me about potentially
using Bolt for it but I think he really, really

247
00:23:44,620 --> 00:23:50,559
liked Jordan's ideas around functional programming.
The conceptual model of react was like crazy

248
00:23:50,559 --> 00:23:55,830
Innovative and it really, really spoke to
me. My background was in distributed systems.

249
00:23:55,830 --> 00:24:01,610
I was not somebody that loved front-end or
thought front-end was doing things well, so

250
00:24:01,610 --> 00:24:06,070
the fact that React came in with like a totally
fresh approach and didn't really care too

251
00:24:06,070 --> 00:24:11,070
much about existing best practices, like I
was I was on board with that. So while I had

252
00:24:11,070 --> 00:24:16,289
evaluated all three I really just dove in
on React to build a prototype first and that

253
00:24:16,289 --> 00:24:22,870
ended up shipping on Instagram.com which was
the second use of React in production ever

254
00:24:22,870 --> 00:24:30,590
and the first use of building a full application
end to end in React.

255
00:24:30,590 --> 00:24:35,429
When I chose React for Instagram it was not
well known within Facebook and it was this

256
00:24:35,429 --> 00:24:40,300
kind of crazy science experiment.

257
00:24:40,300 --> 00:24:45,520
Not even close. By the time Instagram was,
and you know Pete started playing with it,

258
00:24:45,520 --> 00:24:50,909
it was significantly better than it was in
the early, early stage but it still needed

259
00:24:50,909 --> 00:24:55,200
a ton of iteration. We had to take this thing
that was very much tied to Facebook's infrastructure

260
00:24:55,200 --> 00:25:01,720
which back then was a big giant PHP application
and I had to go get that working in a Django

261
00:25:01,720 --> 00:25:07,440
application which is a totally different system.
And what was key was not doing that once but

262
00:25:07,440 --> 00:25:12,049
making that a repeatable process and making
sure that that pipeline didn't break. I think

263
00:25:12,049 --> 00:25:17,059
he hit a number of really interesting problems
along the way which quite proved the fact

264
00:25:17,059 --> 00:25:22,130
that React was not quite ready for that scale
and along the way Pete, and the team that

265
00:25:22,130 --> 00:25:50,590
he was working with, built a lot of really
interesting things. [Music]

266
00:25:50,590 --> 00:25:56,190
Some of these products ended up being fairly
successful. There were relatively short time

267
00:25:56,190 --> 00:26:03,800
to deliver a relatively high quality product.
That showed that this model could work and

268
00:26:03,800 --> 00:26:10,010
it was not just that, but people liked developing
using it. And so that kind of spread and took

269
00:26:10,010 --> 00:26:15,510
off and especially is it got more and more
investment, it became clear that this was

270
00:26:15,510 --> 00:26:22,110
what we wanted to use and it was really ads
that was kind of using Bolt more. It had a

271
00:26:22,110 --> 00:26:28,230
higher level of investment, more people working
in that code base, that already knew it and

272
00:26:28,230 --> 00:26:35,929
more components so it was a harder shift to
make.

273
00:26:35,929 --> 00:26:40,340
The ads team just before I joined ads from
the mobile team had done a full rewrite of

274
00:26:40,340 --> 00:26:45,820
the ads creation flow into Bolt. Which took
them I think upwards of six months replacing

275
00:26:45,820 --> 00:26:52,340
a very old PHP application with what time
was considered a very modern JavaScript application.

276
00:26:52,340 --> 00:26:58,679
But at the same time React was also now actually
deployed for real on Facebook and had a team

277
00:26:58,679 --> 00:27:03,000
that was forming around it. So we now had
two viable frameworks that were both live

278
00:27:03,000 --> 00:27:09,360
on Facebook, both solving real problems. We
shouldn't have two. Especially two that were

279
00:27:09,360 --> 00:27:12,919
similar. Similar enough to confuse people.
Like if you looked at the code, their code

280
00:27:12,919 --> 00:27:17,029
almost looked identical but that worked really
differently. It would actually be an absolute

281
00:27:17,029 --> 00:27:24,320
nightmare if you had to work in both. So we
had to decide which to use.

282
00:27:24,320 --> 00:27:26,890
[Music]

283
00:27:26,890 --> 00:27:31,580
A lot of this ended up being a conversation
between myself and Jordan. We did an evaluation

284
00:27:31,580 --> 00:27:36,660
of both of them. A lot of performance-based
stuff and trying to figure out where the edge

285
00:27:36,660 --> 00:27:42,030
cases were. On the pro side of React, obviously
there's all the things that we know now: it

286
00:27:42,030 --> 00:27:46,890
handles complexity way, way more. Even when
writing the ads creation flow in Bolt we had

287
00:27:46,890 --> 00:27:51,760
already hit one place that you just could
not do in Bolt without writing spaghetti code,

288
00:27:51,760 --> 00:27:56,940
and you can do in React. So we knew in the
future even if it was only 10% of the experience

289
00:27:56,940 --> 00:28:01,230
we were building, we're going to run into
this problem again. Now it might only be 10%

290
00:28:01,230 --> 00:28:05,169
unmaintainable but as you scale that across
a company that is growing rapidly, this becomes

291
00:28:05,169 --> 00:28:10,140
an absolute mess. The cons of it on the other
hand were that React in a lot of ways was

292
00:28:10,140 --> 00:28:13,860
not battle tested yet. There's a lot of things
that simply didn't work in React. It couldn't

293
00:28:13,860 --> 00:28:17,970
handle forms, they'd never done a text box
and there's a lot of complexities around handing

294
00:28:17,970 --> 00:28:22,610
awkward form controls like radio buttons and
so on that it messed up. Just performance

295
00:28:22,610 --> 00:28:27,679
issues where it would try and re-render large
blocks so they hadn't had to do all of the

296
00:28:27,679 --> 00:28:32,830
performance improvements that obviously exist
now. On the organizational side the other

297
00:28:32,830 --> 00:28:39,590
con was that we had just done the six-month
rewrite in Bolt. Facebook had done an IPO

298
00:28:39,590 --> 00:28:45,750
recently and the stock had halved since IPO.
Facebook wasn't making enough money and so

299
00:28:45,750 --> 00:28:49,870
the ads team is the team that makes, you know,
that's where the money starts. If we stop

300
00:28:49,870 --> 00:28:55,679
for four months we're gonna have to tell everybody
sorry no money for you so there was a lot

301
00:28:55,679 --> 00:28:59,150
of conversation back and forth about all this.
It got very difficult. Initially a lot of

302
00:28:59,150 --> 00:29:03,620
the engineers that used Bolt, including Shane,
realized just what you said. Like look we've

303
00:29:03,620 --> 00:29:07,760
invested so much in this thing and it's really
worked for all this stuff, certainly we can

304
00:29:07,760 --> 00:29:12,100
work through the next set of challenges we're
having. So initially there was opposition

305
00:29:12,100 --> 00:29:16,299
to React coming in and saying like how are
you gonna, you know, this new thing that's

306
00:29:16,299 --> 00:29:20,750
not even proven yet. This is our business,
this is really important. When Jordan and

307
00:29:20,750 --> 00:29:25,890
I were working through it, there was definitely
uh some emotions uh there um and mostly I

308
00:29:25,890 --> 00:29:29,640
think it came from uh each of us having a
lack of context of where the other one was

309
00:29:29,640 --> 00:29:34,510
coming from. So I think there was a lot of
talking past each other. In the end Mike Schroepfer

310
00:29:34,510 --> 00:29:41,360
stepped in and said, look make the right technical
decision, make the right long-term decision

311
00:29:41,360 --> 00:29:47,159
and whatever it is I'll back you up. But if
you need to pause product development for

312
00:29:47,159 --> 00:29:53,070
four months you can. We all kind of just got
in rooms and you know worked through all these

313
00:29:53,070 --> 00:29:57,320
things and got everything out in the air of
what's a technical problem, what's an organization

314
00:29:57,320 --> 00:30:03,390
problem, what's a financial problem and kind
of a came to the understanding eventually

315
00:30:03,390 --> 00:30:09,220
through uh with lots and lots of coffee that
React was the right way to go, but um it was

316
00:30:09,220 --> 00:30:14,799
not a straight line at all. He ultimately
was one of the biggest proponents or decision

317
00:30:14,799 --> 00:30:21,330
makers in ads switching everything over to
React and that doesn't happen in most companies.

318
00:30:21,330 --> 00:30:27,289
In most companies if that's your baby project
you try to undermine the other, the upstart,

319
00:30:27,289 --> 00:30:31,860
because you're you know you're really defensive
over your own thing. That was not the vibe

320
00:30:31,860 --> 00:30:39,090
at Facebook at the time and I think that Shane
in particular really exemplified that. There

321
00:30:39,090 --> 00:30:45,070
was still a lot of work to do on the ads creation
flow. Tensions were mounting and the team

322
00:30:45,070 --> 00:30:52,179
was stuck. Here again to get them unstuck,
is Jing Chen. We'd have this thorny management

323
00:30:52,179 --> 00:30:55,659
issue and a lot of people disagreeing with
each othe,r up and down the management chain

324
00:30:55,659 --> 00:30:59,960
on both sides of you know in ads and in this
product infrastructure group those building

325
00:30:59,960 --> 00:31:04,130
react and we'd send Jing in to talk to the
engineers and everyone would come out, like

326
00:31:04,130 --> 00:31:08,539
patting each other on the back, full agreement,
a plan to move forward. So she's great at

327
00:31:08,539 --> 00:31:14,430
building a consensus because she's able to
drill into the important technical details,

328
00:31:14,430 --> 00:31:18,520
identify them really quickly and get everyone
talking about the same thing. She obviously

329
00:31:18,520 --> 00:31:23,330
helped both build the product but she also
made sure that every time we found a bug in

330
00:31:23,330 --> 00:31:28,380
React or just something that it didn't handle
yet, she either stepped back from product

331
00:31:28,380 --> 00:31:32,269
and then just fixed the framework. Or she
went back to the team and said look we need

332
00:31:32,269 --> 00:31:36,340
two or three engineers working on this stuff
for the next month to unblock the ads team.

333
00:31:36,340 --> 00:31:40,580
The ads manager was complicated enough that
it actually ended up being a really great

334
00:31:40,580 --> 00:31:48,020
source of performance improvements and finding
like, where are the true points where it just

335
00:31:48,020 --> 00:31:53,039
doesn't quite scale. So I think it was a lot
of using the building blocks that we had and

336
00:31:53,039 --> 00:31:56,110
as you start to assemble them into a really
complicated looking application, what are

337
00:31:56,110 --> 00:31:59,410
the new problems that come out of that, that
we need to solve. And there was definitely

338
00:31:59,410 --> 00:32:04,500
a lot of those. This is one of the most fun
intense periods of my career as I remember

339
00:32:04,500 --> 00:32:08,289
it. We would be going to meet with the team
and we would have to help them put some feature

340
00:32:08,289 --> 00:32:14,380
in and we would code it up ourselves first
in React just to make sure that the that they

341
00:32:14,380 --> 00:32:18,740
wouldn't hit any rough edges. Or more like
to find all the rough edges that we knew they'd

342
00:32:18,740 --> 00:32:24,100
hit and figure out what the solutions would
be. So it was really exciting because we were

343
00:32:24,100 --> 00:32:28,279
working on two things at the same time. One
was delivering this really complicated, really

344
00:32:28,279 --> 00:32:33,110
important software project for Facebook: the
ads manager. And the other was refining this

345
00:32:33,110 --> 00:32:40,330
framework that we really believed in which
was React. By the time we had rebuilt the

346
00:32:40,330 --> 00:32:44,460
ads creation flow, which I think took about
four months, it had been battle tested with

347
00:32:44,460 --> 00:32:49,880
basically everything about the browser supports,
all the form fields and everything, and also

348
00:32:49,880 --> 00:32:55,950
massive performance issues that had been resolved,
so at that point it was kind of felt that

349
00:32:55,950 --> 00:33:01,710
it was ready to be open source because you
know we we used it in multiple different types

350
00:33:01,710 --> 00:33:10,190
of contexts and that you know it would actually
be generally useful to the public. [Music]

351
00:33:10,190 --> 00:33:19,610
[Mumbled question]
What did you say, Evan?

352
00:33:19,610 --> 00:33:29,130
Uh there is not, sorry. Open sourcing React
was never a question for me. That was the

353
00:33:29,130 --> 00:33:35,370
goal from the very beginning. Tom had this
idea, he called it project perception, and

354
00:33:35,370 --> 00:33:40,580
he was really angry I think it's probably
the best word for it. He was angry that Facebook

355
00:33:40,580 --> 00:33:46,279
was hiring all these luminaries from the JavaScript
world. They would come to Facebook and you

356
00:33:46,279 --> 00:33:50,360
know because we discouraged people from writing
client-side JavaScript and because it was

357
00:33:50,360 --> 00:33:54,900
a hard environment to maneuver in, they would
actually go pick up mobile because that was

358
00:33:54,900 --> 00:33:58,970
where a lot of the interesting client-side
development was happening. And Tom was determined

359
00:33:58,970 --> 00:34:05,389
to change this around. I remember going to
this conference and I was talking to someone

360
00:34:05,389 --> 00:34:09,169
and I told them I worked at Facebook on JavaScript
and they're like why would you do that? I

361
00:34:09,169 --> 00:34:13,040
hate what Facebook does to the JavaScript
industry. You have hired all these really

362
00:34:13,040 --> 00:34:17,050
great people from these really great projects
and we have no idea what they're working on

363
00:34:17,050 --> 00:34:23,159
now. They've given nothing back. So I think
when React came along I started very early

364
00:34:23,159 --> 00:34:28,770
on talking about if this thing works for us
I really want us to find a path to open source.

365
00:34:28,770 --> 00:34:33,859
And I was running that up the management chain
very early so when the time came to open source

366
00:34:33,859 --> 00:34:45,020
it, there were some meetings, it was controversial
but we had all the support we needed already.

367
00:34:45,020 --> 00:34:52,220
The process of open sourcing is interesting.
There's first a technical problem to solve.

368
00:34:52,220 --> 00:34:55,609
You have to figure out how to extract it out
of your infrastructure and make it work in

369
00:34:55,609 --> 00:35:01,180
the open source, which is all the homework
that we did for Instagram. We made this call

370
00:35:01,180 --> 00:35:05,849
that like we will not impact developer productivity
at all, it's going to be entirely on the open

371
00:35:05,849 --> 00:35:10,660
source team, which was just a bunch of people
that wanted to open source it, to make it

372
00:35:10,660 --> 00:35:17,120
work. Then actually pulling the trigger on
open source, we had to write a lot of documentation.

373
00:35:17,120 --> 00:35:21,710
We spent actually a lot of time with the documentation
to explain like, hey what is React, what are

374
00:35:21,710 --> 00:35:27,170
all the concepts and we tried to put ourselves
in the shoes of somebody that want to build

375
00:35:27,170 --> 00:35:33,220
an app. How do we give the documentation in
a way it helps them do that. Paul O'Shannessy

376
00:35:33,220 --> 00:35:37,630
did a lot of this because he really had the
experience with what the ecosystem needed

377
00:35:37,630 --> 00:35:46,240
to make this work at the time. Paul O'Shannessy
was a huge force on open sourcing. As was

378
00:35:46,240 --> 00:35:51,770
James Pearce who was the head of Facebook
open source. James had joined the company

379
00:35:51,770 --> 00:35:57,720
and he really wanted to change Facebook's
open source image. We had previously open

380
00:35:57,720 --> 00:36:02,080
sourced a lot of stuff but we let it rot.
We would say, hey we're an open source company,

381
00:36:02,080 --> 00:36:06,160
here's our great framework and then we would
just never maintain it. And James and Paul

382
00:36:06,160 --> 00:36:09,970
in particular were pretty instrumental in
saying, hey if we're going to open source

383
00:36:09,970 --> 00:36:15,990
React, we're going to do it right. Internally
there was a lot of excitement because we had

384
00:36:15,990 --> 00:36:20,520
already been using this thing for a while
and it was working for us, we were excited

385
00:36:20,520 --> 00:36:27,450
about it. We chose JSconf US which was kind
of the, I don't know, the Oscars of JavaScript

386
00:36:27,450 --> 00:36:31,750
- is that fair representation maybe? You know
all the celebrities are there and everyone's

387
00:36:31,750 --> 00:36:36,340
paying attention and everybody watches it
live on YouTube. Tom and Jordan put together

388
00:36:36,340 --> 00:36:40,490
this presentation. Tom is a great speaker
and Jordan is a brilliant engineer, it was

389
00:36:40,490 --> 00:36:46,359
like a Lennon and McCartney type of situation.
There was no way that this thing could possibly

390
00:36:46,359 --> 00:36:50,579
fail.

391
00:36:50,579 --> 00:37:00,619
[Music] It was in Florida, at like 9 00 a.m.
We were in Menlo Park and we woke up early,

392
00:37:00,619 --> 00:37:05,050
we took the first bus into the office. It
was completely empty and we're getting ready

393
00:37:05,050 --> 00:37:09,241
to like press the button on the repo to open
source it. Jordan and I were all excited we

394
00:37:09,241 --> 00:37:13,140
got up on stage. I'm going to talk a bit about
how we do JavaScript application development

395
00:37:13,140 --> 00:37:17,560
at Facebook. It was a little unconventional,
I did a little bit of it, he did more of it.

396
00:37:17,560 --> 00:37:23,750
So along with react we are shipping an embeddable
XML syntax and we're calling that JSX. And

397
00:37:23,750 --> 00:37:29,301
we jumped into showing some code and that
code looked different, it looked weird. Here

398
00:37:29,301 --> 00:37:36,570
we have React used with JSX. And people were
rightfully skeptical we'll call it. Everyone

399
00:37:36,570 --> 00:37:43,329
hated it, everyone thought it was awful!

400
00:37:43,329 --> 00:37:47,770
[Music]

401
00:37:47,770 --> 00:37:53,080
Internally we were expecting a much better
reception. Or at least an "oh that's interesting

402
00:37:53,080 --> 00:37:57,500
reception". We thought there'd be some language
nerds in there who would um think "oh I can

403
00:37:57,500 --> 00:38:01,020
do fully functional programming in the UI,
oh at least that's interesting". It was a

404
00:38:01,020 --> 00:38:05,260
really humbling experience, it was kind of
a letdown for us because we had worked nights

405
00:38:05,260 --> 00:38:09,369
and weekends on getting this thing open sourceable
and then when we go to launch it, everyone

406
00:38:09,369 --> 00:38:13,900
hated it. The thing that everyone focuses
on is that people really hated JSX.

407
00:38:13,900 --> 00:38:24,680
I haven't watched this video in a while.

408
00:38:24,680 --> 00:38:30,720
See these divs are not exactly what you're
used to they're not DOM nodes, they're special

409
00:38:30,720 --> 00:38:35,620
reactives and I'll get to why that's important.
I don't remember thinking that they were hating

410
00:38:35,620 --> 00:38:43,240
it. I don't remember at all thinking that
they were like tweeting a bunch of stuff.

411
00:38:43,240 --> 00:38:46,650
This is the slide for sure. We haven't talked
about any problems we're trying to solve,

412
00:38:46,650 --> 00:38:50,630
we haven't talked about why this is working
for us or what were the principles of design.
